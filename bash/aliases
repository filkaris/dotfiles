# Local vim
alias v='[ -f .vimrc ] && nvim -u .vimrc || nvim'
alias vi='vim -u NONE'
alias viminit='cp ~/.dotfiles/vim/vimrc.local .vimrc'
alias open='xdg-open'

# CD Shortcuts
alias d='cd ~/.dotfiles'

#-------------
dev() {
    source ~/.dotfiles/dev/$1
}

## Dev
alias grc='git rebase --continue'

# Open File
function gitj()
{
    ls | dmenu -l 7 | xargs xdg-open
}
# Git Dynamic pick branch
function gith()
{
    [ -d ./.git ] && git br | sort -r | dmenu -l 7 | xargs git co
}

# Git Switch between branches
function gitk()
{
    [ -d ./.git ] && git co -
}
function gitp()
{
    cd $HOME/projects/$(ls ~/projects | dmenu -l 5 -p 'Project:')  
}

# Typical code search. Maybe vim has better way?
fcode() {
    #Ideas for improvement:
    # look in specific filetype only
    #find * -name "*.php" | xargs grep -A 4 --color -rn hideAllFilters
    # options! -t php, -A -B (grep)
	grep --color=always -rn "$1" * | less -r
}
fcode2() {
    grep -rn "$1" * | sed -e "s/^\([^:]*:[0-9]*:\).*\(.\{10\}\)\($1\)\(.\{0,50\}\).*$/\1 ___ \2\3\4/" | less -r
}

