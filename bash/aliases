# Local vim
alias v='if [ -f .vimrc ]; then nvim -u .vimrc; else nvim -u ~/.vimrc; fi'
alias vi='vim -u NONE'
alias viminit='cp ~/.dotfiles/vim/vimrc.local .vimrc'

# CD Shortcuts
alias d='cd ~/.dotfiles'

# Edit shortcuts
alias hosts='sudo vim /etc/hosts'

#-------------
dev() {
    source ~/.dotfiles/dev/$1
}
# Typical code search. Maybe vim has better way?
fcode() {
    #Ideas for improvement:
    # look in specific filetype only
    #find * -name "*.php" | xargs grep -A 4 --color -rn hideAllFilters
    # options! -t php, -A -B (grep)
	grep --color=always -rn "$1" * | less -r
}
fcode2() {
    grep -rn "$1" * | sed -e "s/^\([^:]*:[0-9]*:\).*\(.\{10\}\)\($1\)\(.\{0,50\}\).*$/\1 ___ \2\3\4/" | less -r
}

## Dev
alias grc='git rebase --continue'

# Git Dynamic pick branch
function gith()
{
    if [ -d ./.git ] && $(type selecta &>/dev/null); then
        git br | selecta | xargs git co
    else 
        if [ -d ./.git ] && $(type dmenu &>/dev/null); then
            git br | dmenu | xargs git co
        fi
    fi
}

# Git Switch between branches
function gitk()
{
    if [ -d ./.git ]; then
        git co -
    fi
}
function gitp()
{
    if $(type dmenu &>/dev/null); then
        cd $HOME/projects/$(ls ~/projects | dmenu -p 'Project:')  
    fi
}
